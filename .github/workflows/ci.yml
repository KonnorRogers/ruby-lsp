name: CI

on: [push, pull_request]

jobs:
  lint_ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true

      - name: Check if documentation is up to date
        run: bundle exec rake ruby_lsp:check_docs

      - name: Typecheck
        run: bundle exec srb tc

      - name: Lint Ruby files and RBI shims
        run: bundle exec rubocop
  build_ruby:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ruby: ["3.0", "3.1", "3.2", "3.3"]
    runs-on: ${{ matrix.os }}
    name: Ruby ${{ matrix.ruby }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          cache-version: 1

      - name: Run tests
        run: bundle exec rake

      - name: Run index troubleshooting tool
        run: bundle exec ruby-lsp-doctor
  lint_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
          cache-dependency-path: "vscode"

      - name: Lint
        working-directory: ./vscode
        run: |
          yarn --frozen-lockfile
          yarn run lint
  build_node:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
          cache-dependency-path: "vscode"

      - name: Read Ruby version
        id: read_ruby_version
        run: |
          version=$(cat .ruby-version)
          echo "RUBY_VERSION=$version" >> "$GITHUB_OUTPUT"

      # We need some Ruby installed for the environment activation tests
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.read_ruby_version.outputs.RUBY_VERSION }}

      # On GitHub actions, the Ruby binary is installed in a path that's not really standard for version managers. We
      # create a symlink using a standard path so that we test the same behaviour as in development machines
      - name: Symlink Ruby on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir /opt/rubies
          ln -s /opt/hostedtoolcache/Ruby/3.3.0/x64 /opt/rubies/3.3.0

      - name: Symlink Ruby on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir /Users/runner/.rubies
          ln -s /Users/runner/hostedtoolcache/Ruby/3.3.0/x64 /Users/runner/.rubies/3.3.0

      - name: Symlink Ruby on Windows
        if: matrix.os == 'windows-latest'
        run: |
          New-Item -Path C:\Ruby33-x64 -ItemType SymbolicLink -Value C:\hostedtoolcache\windows\Ruby\3.3.0\x64

      - name: Run tests
        working-directory: ./vscode
        env:
          DISPLAY: ":99.0"
        run: |
          yarn --frozen-lockfile
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          yarn run test
